---
import Layout from '~/layouts/PageLayout.astro';
import LettersComponent from '~/components/core/LettersComponent';
import TableComponent from '~/components/core/TableComponent';

import { getProfessorsBySchoolAndLetter } from '~/service/professor-service';
import { getAllSubjects } from '~/service/evaluation-service';
import { getSchoolById } from '~/service/school-service';

import SearchCourses from '~/components/SearchCourses';

const { path } = Astro.params;
const [schoolName, schoolIdStr, letter] = path.split('/');

const metadata = {
  title: 'Professors at ' + schoolName + ' - Rate My Professor Here',
  description: 'Rate your professors at ' + schoolName + ' and help other students stay informed informed.',
};

let professors = [];
let schoolId = Number(schoolIdStr);

let school = await getSchoolById(Astro, schoolId);

let courseSubjects = null;
if (schoolId) {
  courseSubjects = await getAllSubjects(Astro, schoolId);
}

if (letter) {
  professors = await getProfessorsBySchoolAndLetter(Astro, Number(schoolId), letter);
}
---

<Layout metadata={metadata}>
  <div class="container mx-auto p-6">
    <h1 class="text-3xl font-bold">{school.Name}</h1>

    <h2 class="mt-3 font-bold">Find your professor by last name</h2>
    <div class="mt-4">
      <LettersComponent schoolId={schoolIdStr} schoolName={schoolName} activeLetter={letter} />
    </div>

    <SearchCourses
      schoolId={schoolId}
      courseSubjects={courseSubjects}
      onSearch={(x, n) => {
        alert(x + n);
      }}
      client:load
    />

    {
      letter && (
        <TableComponent schoolId={Number(schoolId)} schoolURL={school.toUrlFriendlyName()} professors={professors} />
      )
    }
  </div>
</Layout>

<script define:vars={{ schoolId }}>
  window.localStorage.setItem('schoolId', schoolId);
</script>
