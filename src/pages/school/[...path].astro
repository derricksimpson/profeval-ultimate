---
import Layout from '~/layouts/PageLayout.astro';
import ProfessorSearchComponent from '~/components/ProfessorSearchComponent';
import * as evaluationService from '~/service/evaluation-service';
import { getProfessorsBySchoolAndLetter } from '~/service/professor-service';
import { getEvaluationSearchResults } from '~/service/evaluation-service';
import { getSchoolById } from '~/service/school-service';

const { path, search } = Astro.params;
const [_, schoolIdStr, letter] = path.split('/');
const searchParams = new URLSearchParams(search);

let schoolId = Number(schoolIdStr);
let subject = searchParams.get('Subject') || '';
let callNumber = searchParams.get('CallNumber') || '';
let lName = searchParams.get('LName') || '';
let page = searchParams.get('Page') || 1;
let sort = searchParams.get('Sort'); // Not yet sure we want to sort.

const school = await getSchoolById(Astro, schoolId);
const schoolName = school?.Name || '';

// Fetch initial subjects
const initialSubjects = await evaluationService.getAllSubjects(Astro, schoolId);

let initialProfs = [];

if (letter) {
  // Fetch professors by letter if letter is provided
  initialProfs = await getProfessorsBySchoolAndLetter(Astro, schoolId, letter);
} else if (subject || callNumber || lName) {
  // Fetch professors based on search criteria
  initialProfs = await getEvaluationSearchResults(Astro, { schoolId, subject, callNumber, lastName: lName });
}

const metadata = {
  title: 'Professors at ' + schoolName + ' - Rate My Professor Here',
  description: 'Rate your professors at ' + schoolName + ' and help other students stay informed.',
};
---

<Layout metadata={metadata}>
  <div class="container mx-auto p-2">
    <ProfessorSearchComponent
      context={Astro}
      schoolId={schoolId}
      letter={letter}
      initialSubjects={initialSubjects}
      initialProfessors={initialProfs}
      schoolName={schoolName}
      client:load={true}
      initialSubject={subject}
      initialCourseNumber={callNumber}
      initialProfessorLastName={lName}
    />
  </div>
</Layout>

<script define:vars={{ schoolId, schoolName }}>
  window.localStorage.setItem('schoolId', schoolId);
  window.localStorage.setItem('schoolName', schoolName);

  const date = new Date();
  const days = 365;

  date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);

  document.cookie = 'schoolId=' + schoolId + ';expires=' + date.toUTCString() + ';path=/';
</script>
